@model Model.EntityFramework.PRODUCT

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var db = new Model.EntityFramework.ShopOnlineDbContext();
    var listmodel = new ShopOnline5K.Areas.Admin.Models.ProductModel();
}

@section jsFooter{
    <script>
        var txt1, txt2, txt3 = "";
        $('#btnSelectImage').on('click', function () {
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url.slice(url.lastIndexOf("/") + 1));
            };
            finder.popup();
        })
        $('#btnSelectImage1').on('click', function () {
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage1').val("<Image>" + url.slice(url.lastIndexOf("/") + 1) + "</Image>");
                txt1 = "<Image>" + url.slice(url.lastIndexOf("/") + 1) + "</Image>";
                $('#fulltxtImage').val("<Image>" + txt1 + "</Image>");
            };
            finder.popup();
        })
        $('#btnSelectImage2').on('click', function () {
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage2').val("<Image>" + url.slice(url.lastIndexOf("/") + 1) + "</Image>");
                txt2 = "<Image>" + url.slice(url.lastIndexOf("/") + 1) + "</Image>";
                $('#fulltxtImage').val("<Image>" + txt1 + txt2 + "</Image>");
            };
            finder.popup();
        })
        $('#btnSelectImage3').on('click', function () {
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage3').val("<Image>" + url.slice(url.lastIndexOf("/") + 1) + "</Image>");
                txt3 = "<Image>" + url.slice(url.lastIndexOf("/") + 1) + "</Image>";
                $('#fulltxtImage').val("<Image>" + txt1 + txt2 + txt3 + "</Image>");
            };
            finder.popup();
        })

        var editor = CKEDITOR.replace("txtContent", {
            customConfig: '/Assets/Admin/SbAdmin/js/Plugin/ckeditor/config.js',
        });
    </script>
}

<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">SỬA THÔNG TIN SẢN PHẨM</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    THÔNG TIN CHI TIẾT
                </div>
                <div class="panel-body">
                    <div class="row" style="width:70%; margin-left:30px">
                        @using (Html.BeginForm("Edit", "AdminProduct", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.PRODUCT_ID)

                                <div class="form-group input-group">
                                    <span class="input-group-addon">GroupID</span>
                                    @Html.DropDownListFor(model => model.GROUP_PRODUCT_ID, db.GROUPPRODUCTs.Select(x => new SelectListItem { Text = x.NAME, Value = x.GROUP_PRODUCT_ID.ToString() }), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.GROUP_PRODUCT_ID, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Name</span>
                                    @Html.TextBoxFor(model => model.NAME, new { @class = "form-control", @type = "text", @placeholder = "Nhập tên sản phẩm" })
                                    @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">TagID</span>
                                    @Html.DropDownListFor(model => model.TAG_ID, db.PRODUCTs.Select(x => new SelectListItem { Text = x.TAG.NAME_TAG, Value = x.TAG_ID.ToString() }), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TAG_ID, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Detail</span>
                                    @Html.TextAreaFor(model => model.DETAIL, new { @class = "form-control", @placeholder = "Nhập mô tả sản phẩm", @type = "text", @id = "txtContent" })
                                    @Html.ValidationMessageFor(model => model.DETAIL, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon"><strike>$</strike></span>
                                    @Html.TextBoxFor(model => model.PRICE, new { @class = "form-control", @placeholder = "Nhập giá cũ", @min = "0", @type = "number" })
                                    @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">$</span>
                                    @Html.TextBoxFor(model => model.DISCOUNT_PRICE, new { @class = "form-control", @placeholder = "Nhập giá mới", @min = "0", @type = "number" })
                                    @Html.ValidationMessageFor(model => model.DISCOUNT_PRICE, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">Image</span>
                                    @Html.TextBoxFor(model => model.IMAGE_LINK, new { @class = "form-control", @id = "txtImage", @placeholder = "Ảnh đại diện sản phẩm" })
                                    <button type="button" class="btn btn-outline btn-info" id="btnSelectImage">Upload</button>
                                    @Html.ValidationMessageFor(model => model.IMAGE_LINK, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <span class="input-group-addon">ImageMore</span>
                                    @Html.TextBoxFor(model => listmodel.IMAGE_LIST1, new { @class = "form-control", @id = "txtImage1", @placeholder = "Ảnh chi tiết sản phẩm 1" })
                                    @Html.TextBoxFor(model => listmodel.IMAGE_LIST2, new { @class = "form-control", @id = "txtImage2", @placeholder = "Ảnh chi tiết sản phẩm 2" })
                                    @Html.TextBoxFor(model => listmodel.IMAGE_LIST3, new { @class = "form-control", @id = "txtImage3", @placeholder = "Ảnh chi tiết sản phẩm 3" })
                                    <button type="button" class="btn btn-outline btn-info" id="btnSelectImage1">Upload 1</button>
                                    <button type="button" class="btn btn-outline btn-info" id="btnSelectImage2">Upload 2</button>
                                    <button type="button" class="btn btn-outline btn-info" id="btnSelectImage3">Upload 3</button>
                                    @Html.TextBoxFor(model => model.IMAGE_LIST, new { @class = "form-control", @placeholder = "Ảnh chi tiết sản phẩm", @id = "fulltxtImage" })
                                    @Html.ValidationMessageFor(model => model.IMAGE_LIST, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group input-group">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(model => model.STATUS, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                                            Status
                                        </label>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        @Html.ActionLink("Back to List", "index", "AdminProduct", new { @class = "btn btn-primary" })
                                        <input type="submit" value="Save" class="btn btn-success" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /#page-wrapper -->
